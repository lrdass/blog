---
layout: post
title:  " 'Times on times he divided and measur'd' - William Blake, e como projetar os objetos da terceira dimens√£o"
date:   2022-06-07 15:35:05 -0300
categories: rasterizer william-blake
---


![Urizen realizando com seu compasso a primeira mensura do mundo manifesto](/images/rasterizer/perspectiva/urizen.jpg)
>"Por vezes e vezes ele dividiu, e mediu<br>
> espa√ßo por espa√ßo em sua nove vezes escurid√£o,<br>
> o n√£o visto, o n√£o conhecido, as mudan√ßas apareceram<br>
> como montanhas desoladas, racharam furiosas<br>
> pelos ventos escuros da pertuba√ß√£o"<br>
> tradu√ß√£o livre do primeiro capitulo do livro de Urizen de William Blake

Em algum momento imaginei que eventualmente citaria William Blake. E em particular um de seus personagens de sua cosmogonia pessoal: Urizen.
William Blake foi, se me permitem resumir seus feitos, um pintor e poeta ingl√™s que viveu uma √©poca de instabilidade religiosa na Inglaterra. Como os ingleses n√£o seguiam os preceitos cat√≥licos vindos do Vaticano desde a rebeli√£o de Henrique VIII o povo ingl√™s era uma amalgama de v√°rios grupos crist√£os e cada grupo com a sua pr√≥pria vis√£o e valores do que era ser crist√£o.

Blake n√£o era diferente dos demais ingleses. Tido por muitos como peculiar (talvez um eufemismo para o que alguns chamariam de loucura) ele afirmava que tinha vis√µes e vislumbres de realidades mais sens√≠veis do que n√≥s, indiv√≠duos com menor capacidade visual/espiritual, apenas podemos conjecturar. Para nossa sorte Blake pintou e escreveu todas suas ideias e vis√µes. E nesse processo criou sua pr√≥pria cosmogonia e seu pr√≥prio pante√£o de personagens que prototipavam os arqu√©tipos do ser humano, e por extens√£o, da realidade em s√≠.

Ent√£o voltamos ao homem da pintura acima. Ele √© Urizen. Na cosmogonia de Blake √© o lado racional do homem. Urizen, ou a raz√£o, quando nasce e ve a s√≠ pr√≥pria, acredita que ela foi o motivo em s√≠ mesma, e logo, n√£o existe nada al√©m dela. Ent√£o Urizen conclui que tudo ao seu redor deve nascer de s√≠.

Ent√£o caros amigos, criarmos um mundo tridimensional em um equipamento que usa apenas a l√≥gica √© onde exercemos a maior √≥de a Urizen poss√≠vel. Aqui √© onde estamos come√ßando uma aventura em ideias de como simular a f√≠sica de nosso mundo e at√© de compreender como a logica do pr√≥prio universo funciona para capturar essas ideias e representar em uma linguagem l√≥gica que nossas maquinas de Turing consigam resolver e acender as cores certas na tela.

## Do que voc√™ est√° falando ?
Neste texto n√≥s vamos come√ßar a representar figuras tridimensionais. Para isso vamos ter uma interpreta√ß√£o do espa√ßo do mundo simulado e do espa√ßo bidimensional da tela. E encontrar uma forma de identificar o que est√° na tela da c√¢mera e, por fim, projetar o mundo tridimensional na tela.
Estas ideias s√£o a base da computa√ß√£o gr√°fica. E os algoritmos podem suscitar ideias sobre a simula√ß√£o da realidade, o qu√£o longe podemos ir e quais as restri√ß√µes. Ent√£o vamos colorir nossas ideias e saber o que em n√≥s esta assumindo o controle quando estamos no papel de criar um universo em nossas pr√≥prias m√£os. Um spoiler: na cosmogonia de Blake, Urizen n√£o necessariamente √© o bonzinho da hist√≥ria.

Ent√£o como vai funcionar ? Bom n√≥s queremos ter objetos com tr√™s dimens√µes em um espa√ßo tridimensional e queremos ter alguma forma de filma-los, ou seja, alguma forma de saber quais objetos e/ou quais partes desses objetos est√£o na nossa tela.
Ent√£o... vamos pensar em uma c√¢mera. Imagine que teremos uma c√¢mera onde o que ela captura na verdade vai ser nossa tela.

![Experimento da c√¢mera escura](/images/rasterizer/perspectiva/pinhole.jpg)

Uma c√¢mera funciona como o [experimento da c√¢mara escura][1]. Em que a fotografia ou o video √© capturado dentro da c√¢mera.
Podemos reproduzir o experimento da c√¢mera escura simplificado, onde o plano onde a luz vai ser projetada vai ser um plano conhecido, e esse plano vai ser a nossa tela.

A ideia para descobrir isso vai ser com um pouquinho de geometria. Mas o que queremos procurar √© qual o ponto $$P'$$ no plano de proje√ß√£o para um ponto $$P$$ no mundo. E vamos fazer essa pergunta para todos os pontos do mundo. Os pontos que estiverem dentro do intervalo da nossa tela $$[-0.5, 0.5]$$ em $$x$$ e $$[-0.5, 0.5]$$ em $$y$$. Dai com a nossa tela com v√°rios pontos dos nossos pol√≠gonos tridimensionais, vai bastar fazer um mapeamento dos pontos `tela->monitor` que funcionaria como mapear $$[-0.5, 0.5]=> [0, 1980] pixels$$ para a largura e o mesmo para a altura. E com isso teremos o suficiente para projetar pontos tridimensionais para a nossa tela.

```
projetaObjetoTridimensional(objeto):
  para cada objeto no mundo:
    para cada ponto do objeto
      projete o ponto no plano

    desenhe linhas entre os pontos projetados
```

![Image](/images/rasterizer/perspectiva/perspectiva-1-1.jpg)
Vamos usar a cena acima: temos um cubo na cena, e temos um plano centralizado em $$z_+$$, e a uma distancia $$d = 1$$.

Ent√£o vamos pensar como podemos obter $$P'$$. Se olhar-mos a nossa cena de forma que o eixo $$y$$ fique pra cima e o eixo $$z$$ para a direita e o $$x$$ na nossa dire√ß√£o, vemos que  foma um triangulo com a reta que liga a origem $$O(0,0,0)$$ cruzando o nosso plano de proje√ß√£o $$proj$$.
![Image](/images/rasterizer/perspectiva/perspectiva-2-1.jpg)

ü§î se queremos calcular o ponto $$P'$$, podemos ver que o valor da sua $$y$$-coordenada  √© o segmento $$\overline{P'A}$$(para ser mais correto: √© o valor do segmento $$\overline{P'A}$$ projetado no eixo $$y$$).Sabemos tamb√©m que o valor da sua $$z$$-coordenada √© a mesma da distancia plano $$proj$$ da origem.
Se usarmos a propor√ß√£o do triangulo de que $$\frac{\overline{P'A}}{\overline{OA}} = \frac{\overline{PB}}{\overline{OB}}$$ ent√£o podemos chegar que $$\overline{P'A} = \frac{\overline{OA} * \overline{PB}}{OP}$$.

E sabemos todos os valores que vamos precisar nessa equa√ß√£o: $$\overline{PB}$$  √© o valor da $$y$$-coordenada do ponto $$P$$. O valor $$\overline{OA}$$ √© a distancia do plano de proje√ß√£o da nossa origem no eixo $$z$$, portanto, $$d$$. E por fim o valor de $$\overline{OB}$$ √© a $$z$$-coordenada do ponto $$P$$. Ent√£o temos:

![Image](/images/rasterizer/perspectiva/perspectiva-3-1.jpg)

Para o eixo $$x$$ vamos ter a reciproca! S√≥ que dessa vez vamos olhar como se olh√°ssemos a nossa cena de cima. Com o eixo $$z$$ para cima, o eixo $$x$$ para os lados e o eixo $$y$$ como se tivesse apontado para n√≥s.

![Image](/images/rasterizer/perspectiva/perspectiva-4-1.jpg)


Chegamos em uma equa√ß√£o bem similar, porem considerando a $$x$$ coordenada. Agora sabemos encontrar a posi√ß√£o de um ponto qualquer no mundo projetado no nosso plano de proje√ß√£o. Vamos testar para ver se acontece como planejado!

![Image](/images/rasterizer/perspectiva/perspectiva-5-1.jpg)

![Image](/images/rasterizer/perspectiva/perspectiva-6-1.jpg)

Vamos supor que nosso plano de proje√ß√£o esteja a uma distancia de $$d = 1$$  do eixo $$z$$. Isto √©, imagine que o centro do plano esteja em $$proj = (0,0,1)$$. E imagine que temos um cubo que tenha os oito pontos √† duas unidades na frente do nosso plano e tenha alguns dos pontos: $$P_1(-1, 1, 3), P_2(-1, 1, 4), P_3(-1, -1, 3), P_4(-1, -1, 4), ...$$.

![Image](/images/rasterizer/perspectiva/perspectiva-7-1.jpg)

Se acompanhar as contas acima e desenhar os pontos que encontramos, os pontos que estiverem dentro do intervalo de nosso plano de proje√ß√£o $$[-0.5, 0.5]$$ v√£o ser desenhados. E podemos conferir, como desenhamos √† esquerda, que nosso algoritmo funciona! Podemos conferir que $$P_1(-1, 1, 3) => (-0.3, 0.3, 1)$$.
Uma percep√ß√£o da nossa vis√£o √© que realmente quanto mais longe as coisas est√£o de n√≥s, menor elas parecem ficar. Ent√£o faz sentido os nossos c√°lculos dividir por $$z$$ ou seja ... quanto mais longe menor fica üòÖ.

## hora de implementar !


# Referencias

[1]:https://pt.wikipedia.org/wiki/C%C3%A2mera_escura

